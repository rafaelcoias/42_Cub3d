
# include "./inc/minilibx-linux/mlx.h"
# include <X11/keysym.h>
# include <X11/X.h>
# include "math.h"

typedef struct s_win
{
	void	*mlx_ptr;
	void	*win_ptr;
	int		height;
	int		width;
}		t_win;

typedef struct s_img
{
	t_win	win;
	void	*img_ptr;
	char	*addr;
	int		h;
	int		w;
	int		bpp;
	int		endian;
	int		line_len;
}		t_img;

#include <stdio.h>
#include <unistd.h>

t_img	new_file_img(char * path, void *window)
{
	t_img image;

	image.win.mlx_ptr = window;
	image.img_ptr = mlx_xpm_file_to_image(image.win.mlx_ptr, path, &image.w, &image.h);
	if (!image.img_ptr)
		write(2, "File could not be read\n", 23);
	else
		image.addr = mlx_get_data_addr(image.img_ptr, &(image.bpp),
			&(image.line_len), &(image.endian));
	return (image);
}

int main()
{
    t_img image;
    void *mlx;
    void *win;

    mlx = mlx_init();
	win = mlx_new_window(mlx, 500, 500, "Cub3D");
    image = new_file_img("test.xpm", win);
    if (!image.img_ptr)
        return (2);
    mlx_put_image_to_window(image.win.mlx_ptr, image.win.win_ptr, image.img_ptr, 0, 0);
}